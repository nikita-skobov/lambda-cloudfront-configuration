variables:
  timeouts:
    root: 30
  memorySizes:
    root: 1024
  handlers:
    root: ${opt:root-handler, "./handlers/root.handler"}
  environmentVars:
    root:
      REGION: ${self:provider.region}
  paths:
    root: "/"

functions:
  root:
    timeout: ${self:custom.functionVariables.timeouts.root, ${self:custom.defaultTimeout}}
    memorySize: ${self:custom.functionVariables.memorySizes.root, ${self:custom.defaultMemory}}
    handler: ${self:custom.functionVariables.handlers.root}
    role: rootRole
    environment: ${self:custom.functionVariables.environmentVars.root}

    events:
      - http:
          path: ${self:custom.functionVariables.paths.root}
          method: GET
          ## use private: true if you want to restrict access to this function via an API key that
          ## is checked for you automatically by API Gateway. This is used to only allow CloudFront
          ## to access our lambda functions, and prevent people from simply going to the lambda
          ## execute URL that API Gateway generates
          private: true
          ## use cors true to allow requests made to this API by clients on a different domain
          cors: true
